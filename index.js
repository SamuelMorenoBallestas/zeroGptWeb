function main(){
    var input = document.getElementById("text_in")
    var counter_display = document.getElementById("count")
    var hidden_c_d = document.getElementById("hid_c")


    let currentTranslateX = new WebKitCSSMatrix(window.getComputedStyle(counter_display).transform).m41;
    counter_display.style.transform = `translateX(${currentTranslateX + 40}px)`;


    input.addEventListener('keyup', event => {
        var char_c = String(input.value).length
        if(char_c < 50){
            counter_display.innerHTML = char_c
            hidden_c_d.style.opacity = "0%"

            counter_display.style.transform = `translateX(${currentTranslateX + 40}px)`;
            set_element_color([hidden_c_d, counter_display], "rgb(163 163 163)")
            set_element_class([hidden_c_d, counter_display], "animate-pulse", true)


            }else{
            counter_display.innerHTML = char_c
            hidden_c_d.style.opacity = "100%"
            counter_display.style.transform = `translateX(${currentTranslateX - 5}px)`;
            set_element_color([hidden_c_d, counter_display], "rgb(163 163 163)")
            set_element_class([hidden_c_d, counter_display], "animate-pulse", true)


            if(char_c > 1500){
                set_element_color([hidden_c_d, counter_display], "rgb(248 113 113)")
                set_element_class([hidden_c_d, counter_display], "animate-pulse", false)
            }
        }
    })
}

function set_element_color(elements, color){
    let l = Object.keys(elements).length
    for(let i = 0; i < l; i++){
        elements[i].style.color = color
    }
}

function set_element_class(elements, clss, remove){
    let l = Object.keys(elements).length
    if(remove){
        for(let i = 0; i < l; i++){
            elements[i].classList.remove(clss)
        }
    }else{
        for(let i = 0; i < l; i++){
            elements[i].classList.add(clss)
        }
    }
}
function change_element_class(elements, clss_old, clss_new){
    let l = Object.keys(elements).length
   for(let i = 0; i < l; i++){
        elements[i].classList.replace(clss_old, clss_new)
    }
    
}

async function subm(){
    const text = {
        text: document.getElementById("text_in").value
    }

    const response = await fetch('https://api.jooo.tech/query/gptzero', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json; charset=utf-8'
        },
        body: JSON.stringify(text)
      })
      
      slidescreen(await response.json())

}


function slidescreen(response){

    var parsed = res_parse(response)
    
    console.log(response)
    animation_slidescreen(parsed[0])
    highlight_ai(parsed[1])
}


function res_parse(res){
    return[res["completely_generated_prob"],res["data"]]

}

function highlight_ai(data){
    for(let point = 0; point < Object.keys(data).length; point++){
        var sentence = data[point]["sentence"]
        var text = String(document.getElementById("text_in").innerHTML)
        var start_index = text.indexOf(sentence)
        console.log(start_index)
        if(start_index != -1){
         document.getElementById("text_in").innerHTML = text.replace(sentence, '<span class="bg-red-500 text-white highlighted_text hover:text-lg" >'+sentence+"</span>")
        }
    }   
}

function animation_slidescreen(parsed){
    replace_tag(document.getElementById("text_in"), "div")

    set_element_class(document.getElementsByClassName("st1"), "hidden")
    setTimeout(function() {
        set_element_class([document.getElementById("text_in")], "scale-75")
    }, 50); 


    set_element_class([document.getElementById("main")], "flex-col", true)
    change_element_class([document.getElementById("st2")], "hidden", "flex")
    set_element_class([document.getElementById("st2")], "translate-x-1/2")

    var per_ai = Math.round(parsed*100)
    document.getElementById("ai_per").innerHTML = "Your text is "+per_ai+"% generated by AI"
    document.getElementById("st2").style.opacity = "0%"
    
    setTimeout(function() {
        document.getElementById("st2").style.opacity = "100%";
    }, 50); 


}

function replace_tag(element, new_tag){
    var node = element
    var parent_node = node.parentNode
    var new_node = document.createElement(new_tag)
    var classes = node.classList
    for(let clas = 0; clas < classes.length; clas++){
        new_node.classList.add(classes[clas])
    }

    new_node.setAttribute('id', node.id)
    new_node.innerHTML = node.value

    node.remove()
    parent_node.appendChild(new_node)
} 